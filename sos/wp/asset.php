<?php
namespace SOSIDEE_MFA_PHOTOEDITOR\SOS\WP;
defined( 'SOSIDEE' ) or die( 'you were not supposed to be here' );

/**
 * Trait Asset
 * @package SOSIDEE_MFA_PHOTOEDITOR\SOS\WP
 *
 * For the class SOS\WP\Plugin
 */
trait Asset
{

    public static function loadAsset($filename)
    {
        $ext = strtolower( pathinfo( $filename, PATHINFO_EXTENSION ) );
        $file = self::$path . "/assets/$ext/$filename";
        if ( file_exists($file) )
        {
            return file_get_contents($file);
        }
        else
        {
            $file = self::$path . "/assets/$filename";
            if ( file_exists($file) )
            {
                return file_get_contents($file);
            }
        }
    }

	/**
	 * Enqueues scripts and styles
	 * If running in the backend it checks if the current page is owned by the plugin
	 * @param $handle
	 * @param $src
	 * @param $pages : array of the admin pages of the plugin
	 */
    private function _addAsset( $handle, $src, $type )
	{
		if ( !is_admin() )
		{
			add_action( 'wp_enqueue_scripts', function() use ($handle, $src, $type) {
				if ($type == 'script')
				{
					return wp_enqueue_script( $handle, $src );
				}
				else if ($type == 'style')
				{
					return wp_enqueue_style( $handle, $src );
				}
			});
		}
		else
		{
			$pages = $this->pages;
			add_action( 'admin_enqueue_scripts', function($hook) use ($handle, $src, $pages, $type)  {
				$do_it = false;
				for ($n=0; $n<count($pages); $n++)
				{
					if ( $hook == $pages[$n]->hook )
					{
						$do_it = true;
						break;
					}
				}
				if ($do_it)
				{
					if ($type == 'script')
					{
						return wp_enqueue_script( $handle, $src );
					}
					else if ($type == 'style')
					{
						return wp_enqueue_style( $handle, $src );
					}
				}
			});
		}
	}

    private function _getAssetSrc($path)
    {
        return sosidee_str_remove( get_home_url(), self::$url ) . $path;
    }


    public function addFontawesome()
    {
	    $this->_addAsset('font-awesome', $this->_getAssetSrc('/sos/wp/assets/fa/css/all.css'), 'style' );
	    /**
	     * this->_addAsset('font-awesome', '//use.fontawesome.com/releases/v5.6.3/css/all.css', 'style' );
	    */
    }

    /**
     * INFO: https://fonts.google.com/icons
     */
    public function addGoogleIcons()
    {
	    $this->_addAsset('material-icons', $this->_getAssetSrc('/sos/wp/assets/material-icons.css'), 'style' );
	    /**
	     * ('material-icons', '//fonts.googleapis.com/icon?family=Material+Icons', 'style' );
	    */
    }

	/**
	 * INFO: https://sweetalert2.github.io/
	 */
	public function addSweetAlert()
    {
	    $this->_addAsset('sweet-alert', $this->_getAssetSrc('/sos/wp/assets/sweetalert2.all.min.js'), 'script' );
	    /**
	     * ('sweet-alert', '//cdn.jsdelivr.net/npm/sweetalert2@9', 'script' );
	     */
    }

    public function addApiAjax()
    {
        $this->_addAsset('sos-api-ajax', $this->_getAssetSrc('/sos/wp/assets/sosApi.js'), 'script' );
    }

    /**
     * @param int $size
     * @return string
     *
     * generated by https://icons8.com/
     */
    public function getLoaderSrc($size = 32)
    {
        return self::$url . "/sos/wp/assets/loader$size.gif";
    }

    public static function addMediaLibrary()
    {
        wp_enqueue_media();
    }

}